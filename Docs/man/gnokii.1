.TH "gnokii" "1" "July 15, 2000" "" "Gnokii"
.SH "NAME"
gnokii \- modem/fax driver for Nokia mobile phones
.SH "SYNOPSIS"
.B gnokii
\fIOPTION\fR [\fIARGUMENT\fR]...
.SH "DESCRIPTION"
.PP 
.B gnokii
is a Linux/Unix tool suite and (eventually) modem/fax driver for Nokia mobile phones, released under the GPL.
.PP 
.B gnokii
supports most of the Nokia mobiles including 6100 series, 7110/6210/6250, and some recent models as 6310. It supports also the phones that are capable to understand AT commands. Tested AT phones are: Nokia 7110/6210/6250/6310/6510/8210, Siemens S25, Siemens SL45i, Ericsson T39, SonyEricsson T68i.

.SH "OPTIONS"
The options that are recognized by
.B gnokii
can be divided into several different groups.

.SS GENERAL
.TP 
.BR "\-\-help"
display usage information.
.TP 
.BR "\-\-version"
displays version and copyright information.
.TP 
.BR "\-\-monitor"
continually updates phone status to stderr.

.SS DIALING
.TP 
.BR "\-\-getspeeddial \fIn\fP"
reads speed dial from the specified location.
.TP 
.BR "\-\-setspeeddial \fInumber\fP \fImemory_type\fP \fIlocation\fP"
specify speed dial.
.TP 
.BR "\-\-dialvoice \fInumber\fP"
initiate voice call.
.TP 
.BR "\-\-senddtmf \fIstring\fP"
send DTMF sequence.

.SS PHONE SETTINGS
.TP 
.BR "\-\-getdisplaystatus"
shows what icons are displayed.
.TP 
.BR "\-\-displayoutput"
show texts displayed in phone's screen.
.TP 
.BR "\-\-getprofile [\fInumber\fP]"
show settings for selected(all) profile(s).
.TP 
.BR "\-\-netmonitor {\fIreset\fP|\fIoff\fP|\fIfield\fP|\fIdevel\fP|\fInext\fP|\fInr\fP}"
setting/querying netmonitor mode.
.TP 
.BR "\-\-reset [\fIsoft\fP|\fIhard\fP]"
resets the phone.

.SS TODO
.TP 
.BR "\-\-gettodo \fIstart\fP [\fIsend\fP] [\-v]"
get the notes with numbers from \fIstart\fR to \fIend\fR from calendar.
.PP 
[\-v] \- output in vCalendar 1.0 format
.TP 
.BR "\-\-writetodo \fIvCalendarfile \fInumber"
write the notes to ToDo list.
.PP
number \- location of the note in the vCalendar file
.TP 
.BR "\-\-deletealltodos"
delete all notes from the ToDo list.

.SS CALENDAR
.TP 
.BR "\-\-getcalendarnote \fIstart\fP [\fIsend\fP] [\-v]"
get the note with numbers from \fIstart\fR to \fIend\fR from calendar.
.PP 
[\-v] \- output in vCalendar 1.0 format
.TP 
.BR "\-\-writecalendarnote"
write the note to calendar.
.TP 
.BR "\-\-deletecalendarnote \fIstart\fP [\fIend\fP]"
delete the note with numbers from \fIstart\fR to \fIend\fR from calendar.

.SS SMS
.TP 
.BR "\-\-getsms \fImemory_type\fR \fIstart\fP [\fIend\fP] [\-f \fIfile\fP] [\-d]"
gets SMS messages from specified \fImemory type\fR starting at entry [\fIstart\fR] and ending at [\fIend\fR].
For the \fImemory types\fR you usually use SM for the SIM card and ME for the phone memory. The exception are the phones supported by nk7110 (Nokia 7110/6210/6250) and nk6510 (Nokia 6310/6510/8310) drivers. For these you should use IN for the Inbox, OU for the Outbox, AR for the Archive, TE for the Templates and F1, F2, ... for your own folders.
If [\fIend\fR] is not specified only one location \- [\fIstart\fR] is read.
If [\-f \fIfile\fR] is used entries are saved in \fIfile\fR.
Otherwise they are dumped to stdout.
If [\-d] switch is used, a message is deleted after reading.
.TP 
.BR "\-\-deletesms \fImemory_type\fP \fIstart\fP [\fIend\fP]"
deletes SMS messages from specified \fImemory type\fR starting at entry [\fIstart\fR] and ending at [\fIend\fR].
If [\fIend\fI] is not specified only one location \- [\fIstart\fR] is read.
.TP 
.BR "\-\-sendsms \fIdestination\fP [\-\-smsc \fImessage_center_number\fP | \-\-smscno \fImessage_center_index\fP] [\-r] [\-C \fIn\fP] [\-v \fIn\fP] [\-\-long \fIn\fP]"
sends an SMS message to \fIdestination\fR via \fImessage_center_number\fR or SMSC number taken from phone memory from address \fImessage_center_index\fR.
If this argument is ommited SMSC number is taken from phone memory from location 1.
Message text is taken from STDIN.
This function has had limited testing and may not work at all on your network.
Meaning of other optional parameters:
.PP 
[\-r] \- request for delivery report
.PP 
[\-C \fIn\fR] \- Class Message \fIn\fR, where \fIn\fR can be 0..3
.PP 
[\-v \fIn\fR] \- validity in minutes
.PP 
[\-\-long \fIn\fR] \- send no more then \fIn\fR characters, default is 160
.TP 
.BR "\-\-savesms [--sender \fIfrom\fP] [--smsc \fImessage_center_number\fP | --smscno \fImessage_center_index\fP] [--folder \fIfolder_id\fP] [--location \fInumber\fP] [--sent | --read] [--deliver]"
saves SMS messages to phone. Messages are read from STDIN. You can specify the following optional arguments:
.PP 
[\-\-sender] \- set the sender number (only \fI\-\-deliver\fP)
.PP 
[\-\-smsc \fImessage_center_number\fR] \- set the SMSC number (only \fI\-\-deliver\fP)
.PP 
[\-\-smscno \fImessage_center_index\fR] \- SMSC number taken from phone memory from address \fImessage_center_index\fR (only \fI\-\-deliver\fP)
.PP 
[\-\-folder \fIfolder_id\fR] \- folder ID where to save the SMS to (only valid for newer phones, i.e. 6210/6510 series). For legal values see \fI\-\-getsms\fR.
.PP 
[\-\-location \fInumber\fR] \- save the message to laction \fInumber\fR
.PP 
[\-\-sent | \-\-read] \- mark the message saved/read depending on \fI\-\-deliver\fP
.PP 
[\-\-deliver] \- set the message type to SMS_Deliver
.TP 
.BR "\-\-getsmsc \fInumber\fP"
show the SMSC number from location \fInumber\fR.
.TP 
.BR "\-\-createsmsfolder \fIname\fP"
create SMS folder with name \fIname\fR.
.TP 
.BR "\-\-createsmsfolder \fInumber\fP"
delete folder # \fInumber\fR of 'My Folders'.

.SS LOGOS
.TP 
.BR "\-\-sendlogo {\fIcaller\fP|\fIop\fP} \fIdestination\fP \fIlogofile\fP [\fInetwork_code\fP]"
send the \fIlogofile\fR to \fIdestination\fR as operator or CLI logo.
.TP 
.BR "\-\-setlogo \fIlogofile\fP [\fInetwork_code\fP]"
.TP 
.BR "\-\-setlogo \fIlogofile\fP [\fIcaller_group_number\fP] [\fIgroup_name\fP]"
.TP 
.BR "\-\-setlogo \fItext\fP [\fIstartup_text\fP]"
.TP 
.BR "\-\-setlogo \fIdealer\fP [\fIdealer_startup_text\fP]"
set caller, startup or operator logo.
.TP 
.BR "\-\-getlogo \fIlogofile\fP {\fIcaller\fP|\fIop\fP|\fIstartup\fP} [\fIcaller_group_number\fP]"
get caller, startup or operator logo.

.SS RINGTONES
.TP 
.BR "\-\-sendringtone \fIdestination\fI \fIrtttlfile\fP"
send the \fIrtttlfile\fR to \fIdestination\fR as ringtone.
.TP 
.BR "\-\-setringtone \fIrtttlfile\fP"
set the \fIrtttlfile\fR as ringtone (on 6110).

.SS PHONEBOOK
.TP 
.BR "\-\-getphonebook \fImemory_type\fP \fIstart_number\fP [\fIend_number|end\fP] [\fI-r|--raw\fP]"
reads specificed memory location from phone.
If [\fIend_number\fR] is not specified only one location \- [\fIstart\fR] is
read.
If instead of [\fIend_number\fR] the text \fIend\fR is specified then gnokii
will read from \fIstart_number\fR until it encounters a non-existant location.
Valid \fImemory types\fR are: ME, SM, FD, ON, EN, DC, RC, MC, LD.
You can use also \rI-r\fR or \rI--raw\fR switch to get the raw output. You can
use it then with \fI--writephonebook\fR. Normally you got verbose output.
.TP 
.BR "\-\-writephonebook [\-i]"
reads data from stdin and writes to phonebook
When \-i option is used, refuses to overwrite existing entries.
Uses the same format as provided by the output of the getphonebook command.

.SS WAP
.TP
.BR "\-\-getwapbookmark \fInumber\fP"
reads the specified WAP bookmark from phone
.TP
.BR "\-\-writewapbookmark \fIname\fP \fIURL\fP"
write WAP bookmark to phone
.TP
.BR "\-\-deletewapbookmark \fInumber\fP"
delete WAP bookmark from phone
.TP
.BR "\-\-getwapsetting \fInumber\fP [\fI-r\fP]"
read WAP setting from phone
.TP
.BR "\-\-writewapsetting"
reads data from stdin and writes it to phone
Hint: see syntax from \fI--writephone\fP \fI-r\fP option
.TP
.BR "\-\-activatewapsetting \fInumber\fP"
activate WAP setting \fInumber\fP


.SS DATE, TIME AND ALARM
.TP 
.BR "\-\-setdatetime [\fIYYY\fP [\fIMM\fP [\fIDD\fP [\fIHH\fP [\fIMM\fP]]]]]"
set the date and the time of the phone.
.TP 
.BR "\-\-getdatetime"
shows current date and time in the phone.
.TP 
.BR "\-\-setalarm \fIHH\fP \fIMM\fP"
set the alarm of the phone.
.TP 
.BR "\-\-getalarm"
shows current alarm.
.TP 
.BR "\-\-getsecuritycode"
shows the currently set security code.

.SS SECURITY
.TP 
.BR "\-\-identify"
get IMEI, model and revision.
.TP 
.BR "\-\-entersecuritycode {\fIPIN\fP|\fIPIN2\fP|\fIPUK\fP|\fIPUK2\fP}"
asks for the code and sends it to the phone.
.TP 
.BR "\-\-getsecuritycodestatus"
show if a security code is needed.

.SH "DIAGNOSTICS"
Various error messages are printed to standard error.  The exit code
is 0 for correct functioning.  Errors which appear to be caused by
invalid or abused command line parameters cause an exit code of 2, and
other errors cause an exit code of 1.

.SH "BUGS"
.PP 
We write quality software here ;)

.SH "AUTHOR"
Hugh Blemings <hugh@blemings.org> and Pavel Janik ml. <Pavel.Janik@suse.cz>

Manual page written by Dag Wieers <dag@mind.be> and Pawel Kot <pkot@linuxnews.pl>

See also Docs/CREDITS from Gnokii sources.

.SH "COPYING"
This program is distributed under the GNU Public License.

.SH "SEE ALSO"
gnokiid, xgnokii
