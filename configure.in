dnl
dnl  Makefile for the GNOKII tool suite.
dnl 
dnl  Copyright (C) 1999 Hugh Blemings & Pavel Janík ml.
dnl                2000 Karel Zak
dnl

AC_INIT(gnokii/gnokii.c)

AC_CONFIG_AUX_DIR(config)

AC_CANONICAL_SYSTEM

dnl ======================== Default setting
CFLAGS="-O2 -Wall"
ALL_LINGUAS="cs de fi nl"
model="6110"
port="/dev/ttyS0"

dnl ======================== Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PATH_PROG(LD, ld, no)
AC_PATH_PROG(RM, rm, no)
AC_PATH_PROG(CP, cp, no)
AC_CHECK_PROGS(MAKE, gmake make)
AC_PROG_INSTALL

AC_ARG_ENABLE(debug, 
	[  --enable-debug          compile with debug code],
	[ CFLAGS="-g -Wall -DDEBUG"
          debug="yes" ],
        [ debug="no"  ]
)

AC_ARG_ENABLE(xdebug,
	[  --enable-xdebug         compile with xdebug code],
	[ CFLAGS="$CFLAGS -DXDEBUG"
          xdebug="yes" ],
        [ xdebug="no"  ]
)

AC_ARG_ENABLE(rlpdebug, 
	[  --enable-rlpdebug       compile with RLP debug code],
	[ CFLAGS="$CFLAGS -DRLP_DEBUG"
          rlpdebug="yes" ],
        [ rlpdebug="no"  ]
)

dnl ======================== NLS support

AC_ARG_ENABLE(nls,
	[  --disable-nls           do not use NLS],
	USE_NLS=no, USE_NLS=yes)

if test "$USE_NLS" = "yes"; then
  AC_REQUIRE([AC_PROG_MAKE_SET])
  AC_CHECK_HEADERS(locale.h)
  AC_CHECK_FUNCS(setlocale)
  AC_SUBST(HAVE_LOCALE_H)  

  AC_TRY_CPP([#include <libintl.h>], [
	AC_DEFINE(HAVE_LIBINTL_H)
	AC_MSG_RESULT(
	  [checking for libintl.h... yes])], [
	  CPPFLAGS="$CPPFLAGS -I/usr/local/include"
	  AC_TRY_CPP([#include <libintl.h>], [
		  CFLAGS="$CFLAGS -I/usr/local/include"
		AC_DEFINE(HAVE_LIBINTL_H)
		  AC_MSG_RESULT(
		  [checking for libintl.h... /usr/local/include/libintl.h])],
		  AC_MSG_ERROR(not found header file: libintl.h !!!))
	])
  AC_CHECK_FUNC(gettext, AC_DEFINE(HAVE_LIBINTL), [
	  LIBS="$LIBS -L/usr/local/lib"
	AC_DEFINE(HAVE_LIBINTL)
	  AC_CHECK_LIB(intl, gettext, LIBS="$LIBS -lintl",
		AC_MSG_ERROR(not found library: intl !!!)
          )
  ])

  AC_SUBST(HAVE_LIBINTL_H)  
  AC_SUBST(HAVE_LIBINTL)

  dnl Handle localedir
  LOCALEDIR='${prefix}/share/locale'
  AC_ARG_WITH(locale-dir,
  [  --with-locale-dir=DIR   Location of the locale file(s)
                          [PREFIX/share/locale]],[
    if test x$withval = xyes; then
      AC_MSG_WARN(Usage is: --with-locale-dir=basedir)
    else
      if test x$withval = xno; then
        AC_MSG_WARN(Usage is: --with-locale-dir=basedir)
      else
        LOCALEDIR=$withval
      fi
    fi
  ])
  AC_SUBST(LOCALEDIR)

  AC_PATH_PROG(MSGFMT, msgfmt, $MSGFMT)
  if test -n "$MSGFMT"; then
    AC_CHECK_FUNCS(dcgettext)
    AC_PATH_PROG(GMSGFMT, gmsgfmt, $MSGFMT)
    AC_PATH_PROG(XGETTEXT, xgettext, $XGETTEXT)
    AC_PATH_PROG(MSGMERGE, msgmerge, $MSGMERGE)

    dnl Test whether we really found GNU xgettext.
    if test -n "$XGETTEXT"; then
      if $XGETTEXT --omit-header /dev/null 2> /dev/null; then
        : ;
      else
        AC_MSG_RESULT(
          [found xgettext program is not GNU xgettext; ignore it])
        XGETTEXT=""
      fi
    fi

    dnl We add another test for comparing GNU xgettext with openwin xgettext
    if test -n "$XGETTEXT"; then
      if $XGETTEXT --help > /dev/null 2> /dev/null; then
        : ;
      else
        AC_MSG_RESULT(
          [found xgettext program is not GNU xgettext; ignore it])
        XGETTEXT=""
      fi
    fi

    dnl Test whether we really found GNU msgfmt.
    if test -n "$MSGFMT"; then
      if $MSGFMT < /dev/null 2> /dev/null; then
        AC_MSG_RESULT(
          [found msgfmt program is not GNU msgfmt; NLS will not be installed])
        MSGFMT=""
      fi
    fi

    AC_TRY_LINK(,
                [extern int _nl_msg_cat_cntr;
                 return _nl_msg_cat_cntr],
                [CATOBJEXT=.gmo
                 DATADIRNAME=share],  
                [CATOBJEXT=.mo
                 DATADIRNAME=lib])
    INSTOBJEXT=.mo
  fi

  if test -n "$ALL_LINGUAS"; then
    for lang in $ALL_LINGUAS; do
      CATALOGS="$CATALOGS $lang$CATOBJEXT"
    done
  fi
  AC_SUBST(CATALOGS)
  AC_SUBST(CATOBJEXT)
  AC_SUBST(INSTOBJEXT)
  AC_SUBST(DATADIRNAME)
fi

dnl don't use NLS, when there is no gettext installed
if test x"$MSGFMT" = x; then
  USE_NLS=no
fi

if test x"$USE_NLS" = xyes; then
  CFLAGS="$CFLAGS -DUSE_NLS"
fi

dnl ======================== Checks for libraries.

AC_ARG_WITH(libpthread, 
	[  --with-libpthread=DIR   specifies the base libpthread],
	[ if test x$withval = xyes
	  then 
		AC_MSG_WARN(Usage is: --with-libpthread=DIR)
	  else
		PTHREAD_LIBS="-L$withval/lib/"
		PTHREAD_CFLAGS="-I$withval/include/"
	  fi
	]
)

dnl Check for libpthread
PTHREAD_LIBS_SAVE="$PTHREAD_LIBS"
PTHREAD_LIBS=error
AC_CHECK_LIB(pthread, pthread_attr_init, [
                      PTHREAD_CFLAGS="$PTHREAD_CFLAGS -D_REENTRANT"
		      PTHREAD_LIBS="$PTHREAD_LIBS_SAVE -pthread" ])

dnl FIXME: test this on *BSD and report results immediatelly to the ml please
dnl If it is not found, try to check for c_r (on FreeBSD)
if test "x$PTHREAD_LIBS" = xerror; then
  AC_CHECK_LIB(c_r, pthread_attr_init, [
                    PTHREAD_CFLAGS="$PTHREAD_CFLAGS -D_THREAD_SAFE"
                    PTHREAD_LIBS="-pthread" ])
fi

dnl FIXME: do we really test here if libc contains this function?
if test "x$PTHREAD_LIBS" = xerror; then
	AC_CHECK_FUNC(pthread_attr_init, PTHREAD_LIBS="",
		AC_MSG_ERROR(not found library: pthread !!!))
fi

AC_TRY_CPP([#include <getopt.h>], AC_MSG_RESULT(
	[checking for getopt.h... yes]), [
	CPPFLAGS="$CPPFLAGS -I/usr/local/include"
	AC_TRY_CPP([#include <getopt.h>], [
		CFLAGS="$CFLAGS -I/usr/local/include"
		AC_MSG_RESULT(
		[checking for getopt.h... /usr/local/include/getopt.h])],
		AC_MSG_ERROR(not found header file: getopt.h !!!))
	])
AC_CHECK_FUNC(getopt_long, , [
        LIBS="$LIBS -L/usr/local/lib"
	        AC_CHECK_LIB(gnugetopt, getopt_long, LIBS="$LIBS -lgnugetopt",
		                AC_MSG_ERROR(not found library: gnugetopt !!!))])

dnl ======================== Checks for X base support 

if test "$no_x" = yes -o "$with_x" = "no"
then
	x_support="no"
	XPM_CFLAGS=""
	XPM_LIBS=""
	GTK_CFLAGS=""
	GTK_LIBS=""
else
	AC_PATH_X

	AC_CHECK_LIB(Xpm, XpmWriteFileFromPixmap, [
			XPM_CFLAGS="-DXPM -I$x_includes"
			XPM_LIBS="-L$x_libraries -lX11 -lXpm"
		],
		[ AC_MSG_ERROR(not found library: libXpm !!!) ],
		[ -L$x_libraries -lX11 ]
	) 

	AC_PATH_PROGS(GTK_CONFIG, gtk-config gtk12-config, no)
	if test "$GTK_CONFIG" = no
	then
		AC_MSG_ERROR(Cannot find gtk-config.)
	else
		GTK_CFLAGS=`$GTK_CONFIG --cflags`
		GTK_LIBS=`$GTK_CONFIG --libs`
	fi	
	x_support="yes"	
fi


dnl ======================== Additional switches

AC_ARG_ENABLE(security, 
	[  --enable-security       enable all security features ],
	[ CFLAGS="$CFLAGS -DSECURITY"
	  security="yes" ],
	[ security="no"  ]
)

AC_ARG_ENABLE(win32, 
	[  --enable-win32          if you want win32 suport ],
	[ win32="-DWIN32" ],
	[ win32=""]
)

AC_ARG_WITH(model, 
	[  --with-model=MODEL      model of the mobile phone ],
	[ model="$withval" ]
)

AC_ARG_WITH(port, 
	[  --with-port=PORT        serial port for communication ],
	[ port="$withval" ]
)


dnl ======================== Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h sys/ioctl.h sys/time.h unistd.h)

dnl ======================== Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl ======================== Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_TYPE_SIGNAL
AC_FUNC_STRFTIME
AC_CHECK_FUNCS(mktime select strdup strstr strtol)

PACKAGE=gnokii
VERSION=`cat VERSION`
XVERSION=`cat xgnokii/VERSION`

AC_SUBST(PACKAGE)
AC_SUBST(VERSION)
AC_SUBST(XVERSION)
AC_SUBST(model)
AC_SUBST(port)
AC_SUBST(win32)
AC_SUBST(USE_NLS)
AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)
AC_SUBST(PTHREAD_CFLAGS)
AC_SUBST(PTHREAD_LIBS)
AC_SUBST(XPM_CFLAGS)
AC_SUBST(XPM_LIBS)

AC_OUTPUT(
	Makefile.global
	po/Makefile.in
	packaging/RedHat/gnokii.spec,
        [sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile]
	)


dnl ======================== Final report

echo "

  G N O K I I

  A Linux/Unix toolset and driver for Nokia mobile phones.

  Copyright (C) 1999-2000  The Gnokii Development Team.

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.
 
  See file COPYING for more details.

    Host system:	$host_os
    Gnokii version:     $VERSION
    Xgnokii version:	$XVERSION
    Phone model:        $model
    Serial port:        $port
    X (GTK) support:    $x_support
    Debug:              $debug
    XDebug:             $xdebug
    RLPDebug:           $rlpdebug
    NLS:                $USE_NLS
    Security:           $security
    Win32:              $win32 
    Prefix:             $prefix

  Type '${MAKE}' for compilation.
 
"
